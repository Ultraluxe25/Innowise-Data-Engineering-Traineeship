-- Karpov Courses - SQL (Lesson 3)

/* Правильный порядок операторов в запросе выглядит так:

SELECT - перечисление полей результирующей таблицы
FROM - указание источника данных
WHERE - фильтрация данных
GROUP BY - группировка данных
HAVING - фильтрация данных после группировки
ORDER BY - сортировка результирующей таблицы
LIMIT - ограничение количества выводимых записей
*/

SELECT 
    creation_time::text
FROM
    orders
LIMIT
    100;


/* Задание 1:
Выведите все записи из таблицы products.
Поля в результирующей таблице: product_id, name, price
К каждой задаче под специальной кнопкой мы будем приводить результат, который ожидает проверяющая система.
Пользоваться кнопкой при решении задачи или нет — решать вам. 
Однако рекомендуем прибегать к ней только в случае крайней необходимости — старайтесь пробовать писать запросы без неё, 
как на настоящей работе. */

SELECT
    product_id,
    name, 
    price
FROM
    products;


/* Задание 2:

Выведите все записи из таблицы products, отсортировав их по наименованиям товаров в алфавитном порядке, 
т.е. по возрастанию. Для сортировки используйте оператор ORDER BY.
Поля в результирующей таблице: product_id, name, price

Пояснение:
Сортировку можно делать не только по полям со значениями, выраженными числами, но и по полям, 
значения в которых представлены в виде текста, как в нашем случае. */

SELECT
    product_id,
    name,
    price
FROM
    products
ORDER BY
    name ASC;


/* Задание 3:
Отсортируйте таблицу courier_actions сначала по колонке courier_id по возрастанию id курьера, 
потом по колонке action (снова по возрастанию), а затем по колонке time, 
но уже по убыванию — от самого последнего действия к самому первому. 
Не забудьте включить в результат колонку order_id.
Добавьте в запрос оператор LIMIT и выведите только первые 1000 строк результирующей таблицы.
Поля в результирующей таблице: courier_id, order_id, action, time

Пояснение:
Как вы уже догадались, сортировать таблицы можно в том числе по полям с датами и временем. */

SELECT
    courier_id,
    action,
    time,
    order_id
FROM
    courier_actions
ORDER BY
    courier_id,
    action,
    time DESC
LIMIT
    1000;


/* Задание 4:

Используя операторы SELECT, FROM, ORDER BY и LIMIT, определите 5 самых дорогих товаров в таблице products, 
которые доставляет наш сервис. Выведите их наименования и цену.
Поля в результирующей таблице: name, price */

SELECT
    name,
    price
FROM
    products
ORDER BY
    price DESC
LIMIT
    5;


/* Задание 5:
Повторите запрос из предыдущего задания, но теперь колонки name и price переименуйте соответственно в product_name 
и product_price.
Поля в результирующей таблице: product_name, product_price */

SELECT
    name AS product_name,
    price AS product_price
FROM
    products
ORDER BY
    price DESC
LIMIT
    5;


/* Задание 6:
Используя операторы SELECT, FROM, ORDER BY и LIMIT, а также функцию LENGTH, 
определите товар с самым длинным названием в таблице products. Выведите его наименование, 
длину наименования в символах, а также цену этого товара. Колонку с длиной наименования в символах назовите name_length.
Поля в результирующей таблице: name, name_length, price */

SELECT
    name,
    LENGTH(name) AS name_length,
    price
FROM
    products
ORDER BY
    name_length DESC
LIMIT
    1;


/* Задание 7:
Примените последовательно функции UPPER и SPLIT_PART к колонке name и преобразуйте наименования товаров 
в таблице products так, чтобы от названий осталось только первое слово, записанное в верхнем регистре. 
Колонку с новым названием, состоящим из первого слова, назовите first_word.
В результат включите исходные наименования товаров, новые наименования из первого слова, а также цену товаров. 
Результат отсортируйте по возрастанию исходного наименования товара в колонке name.
Поля в результирующей таблице: name, first_word, price */

SELECT
    name,
    SPLIT_PART(UPPER(name), ' ', 1) AS first_word,
    price
FROM
    products
ORDER BY
    name;


/* Задание 8:
Измените тип колонки price из таблицы products на VARCHAR. Выведите колонки с наименованием товаров, 
ценой в исходном формате и ценой в формате VARCHAR. Новую колонку с ценой в новом формате назовите price_char.
Результат отсортируйте по возрастанию исходного наименования товара в колонке name. 
Количество выводимых записей не ограничивайте.
Поле в результирующей таблице: name, price, price_char */

SELECT
    name,
    price,
    CAST(price AS VARCHAR) AS price_char
FROM
    products
ORDER BY
    name;


/* Задание 9:
Для первых 200 записей из таблицы orders выведите информацию в следующем виде (обратите внимание на пробелы):

Заказ № [id_заказа] создан [дата]

Полученную колонку назовите order_info.

Пример вывода:
Заказ № 65 создан 2022-09-01


Пояснение:
При указании текстовых значений используйте одинарные кавычки.
Чтобы извлечь дату из значений в колонке creation_time, достаточно применить к ней функцию DATE или изменить её тип на DATE:

SELECT DATE(time)
или
SELECT CAST(time AS DATE)
или
SELECT time::DATE */

SELECT
    CONCAT(
        'Заказ № ',
        order_id,
        ' создан ',
        creation_time::Date
    ) AS order_info
FROM
    orders
LIMIT
    200;


/* Задание 10:
Выведите id всех курьеров и их годы рождения из таблицы couriers.
Год рождения необходимо получить из колонки birth_date. Новую колонку с годом назовите birth_year. 
Результат отсортируйте сначала по убыванию года рождения курьера (т.е. от самых младших к самым старшим), 
затем по возрастанию id курьера.
Поля в результирующей таблице: courier_id, birth_year */

SELECT
    courier_id,
    DATE_PART('year', birth_date) AS birth_year
FROM
    couriers
ORDER BY
    birth_year DESC,
    courier_id;
